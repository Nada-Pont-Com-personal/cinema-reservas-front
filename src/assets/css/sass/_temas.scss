@use "themes/gogo.light.blueyale.scss" as l-blueyale;
@use "themes/gogo.light.bluenavy.scss" as l-bluenavy;
@use "themes/gogo.light.blueolympic.scss" as l-blueolympic;
@use "themes/gogo.light.greenlime.scss" as l-greenlime;
@use "themes/gogo.light.greenmoss.scss" as l-greenmoss;
@use "themes/gogo.light.greysteel.scss" as l-greysteel;
@use "themes/gogo.light.orangecarrot.scss" as l-orangecarrot;
@use "themes/gogo.light.purplemonster.scss" as l-purplemonster;
@use "themes/gogo.light.redruby.scss" as l-redruby;
@use "themes/gogo.light.yellowgranola.scss" as l-yellowgranola;

@use "themes/gogo.dark.blueyale.scss" as d-blueyale;
@use "themes/gogo.dark.bluenavy.scss" as d-bluenavy;
@use "themes/gogo.dark.blueolympic.scss" as d-blueolympic;
@use "themes/gogo.dark.greenlime.scss" as d-greenlime;
@use "themes/gogo.dark.greenmoss.scss" as d-greenmoss;
@use "themes/gogo.dark.greysteel.scss" as d-greysteel;
@use "themes/gogo.dark.orangecarrot.scss" as d-orangecarrot;
@use "themes/gogo.dark.purplemonster.scss" as d-purplemonster;
@use "themes/gogo.dark.redruby.scss" as d-redruby;
@use "themes/gogo.dark.yellowgranola.scss" as d-yellowgranola;

$temas: (
  "light-blueyale": l-blueyale.$tema,
  "light-bluenavy": l-bluenavy.$tema,
  "light-blueolympic": l-blueolympic.$tema,
  "light-greenlime": l-greenlime.$tema,
  "light-greenmoss": l-greenmoss.$tema,
  "light-greysteel": l-greysteel.$tema,
  "light-orangecarrot": l-orangecarrot.$tema,
  "light-purplemonster": l-purplemonster.$tema,
  "light-redruby": l-redruby.$tema,
  "light-yellowgranola": l-yellowgranola.$tema,
  "dark-blueyale": d-blueyale.$tema,
  "dark-bluenavy": d-bluenavy.$tema,
  "dark-blueolympic": d-blueolympic.$tema,
  "dark-greenlime": d-greenlime.$tema,
  "p": d-greenmoss.$tema,
  "dark-greysteel": d-greysteel.$tema,
  "dark-orangecarrot": d-orangecarrot.$tema,
  "dark-purplemonster": d-purplemonster.$tema,
  "dark-redruby": d-redruby.$tema,
  "dark-yellowgranola": d-yellowgranola.$tema,
);

@mixin temas {
  @each $tema, $map in $temas {
    .#{$tema} {
      @content ($map);
      // background-color: map-get($valores, theme-color-1);
    }
  }
}

@mixin temasE {
  @each $tema, $map in $temas {
    &.#{$tema} {
      @content ($map);
    }

    // background-color: map-get($valores, theme-color-1);
  }
}
